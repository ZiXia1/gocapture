name: Release gocapture
on:
  push:
    tags:
      - v*
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: gocapture ${{ github.ref }}
          draft: false
          prerelease: false
  linuxbuild:
    name: build linux version
    env:
      PCAPV: 1.10.1
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install libpcap
        run: sudo apt-get install -y libpcap-dev bison flex gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf
      - run: |
          rm -f nac.manifest nac.syso
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: build linux amd64 version
        run: go build -o gocapture_linux_amd64 -v ./...
      - name: build linux arm64 version
        run: |
          pwd
          wget http://www.tcpdump.org/release/libpcap-$PCAPV.tar.gz
          tar -zxvf libpcap-$PCAPV.tar.gz
          cd libpcap-$PCAPV
          export CC=aarch64-linux-gnu-gcc
          ./configure --host=aarch64-linux --with-pcap=linux
          make
          cd ..
          env CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CGO_LDFLAGS="-L/home/runner/gocapture/libpcap-$PCAPV" go build -o gocapture_linux_arm64

      - name: build linux arm version
        run: |
          cd libpcap-$PCAPV
          make clean
          export CC=arm-linux-gnueabi-gcc
          ./configure --host=arm-linux --with-pcap=linux
          make
          cd ..
          env CC=arm-linux-gnueabi-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm CGO_LDFLAGS="-L/home/runner/gocapture/libpcap-$PCAPV" go build -o gocapture_linux_arm .
      - name: package
        run: tar -zcvf gocapture_linux_amd64.tgz gocapture_linux_amd64 static templates GeoLite2-City.mmdb
      - run: tar -zcvf gocapture_linux_arm64.tgz gocapture_linux_arm64 static templates GeoLite2-City.mmdb
      - run: tar -zcvf gocapture_linux_arm.tgz gocapture_linux_arm static templates GeoLite2-City.mmdb
      - name: upload amd64 version
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gocapture_linux_amd64.tgz
          asset_name: gocapture_linux_amd64.tgz
          asset_content_type: application/gzip
      - name: upload arm64 version
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gocapture_linux_arm64.tgz
          asset_name: gocapture_linux_arm64.tgz
          asset_content_type: application/gzip
      - name: upload arm32 version
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gocapture_linux_arm.tgz
          asset_name: gocapture_linux_arm.tgz
          asset_content_type: application/gzip
  windowsbuild:
    name: build windows version
    runs-on: windows-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: build windows version
        run: go build -v -o gocapture_windows.exe ./...
      - name: package
        run: tar -zcvf gocapture_windows.tgz gocapture_windows.exe static templates GeoLite2-City.mmdb
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gocapture_windows.tgz
          asset_name: gocapture_windows.tgz
          asset_content_type: application/gzip
